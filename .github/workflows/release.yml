name: web-bg-publish

#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release-and-gchr-push:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - name: checkout repo
        uses: actions/checkout@master

      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and release
        uses: rust-build/rust-build.action@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ matrix.target }}

#jobs:
#  release:
#    name: Build and Release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Build project
#        run: cargo build --release --locked
#      - name: Bump version and push tag/create release point
#        uses: anothrNick/github-tag-action@1.17.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          WITH_V: true
#        id: bump_version
#      - name: Upload binary to release
#        uses: svenstaro/upload-release-action@v1-release
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: target/release/tf-web-bg
#          asset_name: tf-web-bg-linux-amd64
#          tag: ${{ steps.bump_version.outputs.new_tag }}
#          overwrite: true

#jobs:
#  publish:
#    name: Publish for ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        name: [ linux ]
#
#        include:
#          - name: linux
#            os: ubuntu-latest
#            artifact_name: target/release/tf-web-bg
#            asset_name: tf-web-bg-linux
#
#    steps:
#    - uses: actions/checkout@v1
#
#    - uses: actions-rs/toolchain@v1
#      with:
#        profile: minimal
#        toolchain: stable
#
#    - name: Build
#      run: cargo build --release --locked
#
#    - name: Upload binaries to release
#      uses: actions/upload-artifact@v2
#      with:
#        name: ${{ matrix.asset_name }}
#        path: ${{ matrix.artifact_name }}
